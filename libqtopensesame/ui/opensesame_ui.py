# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'resources/ui/opensesame.ui'
#
# Created: Thu Jun  6 16:59:41 2013
#      by: PyQt4 UI code generator 4.10
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_opensesame_mainwindow(object):
    def setupUi(self, opensesame_mainwindow):
        opensesame_mainwindow.setObjectName(_fromUtf8("opensesame_mainwindow"))
        opensesame_mainwindow.resize(1000, 773)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/experiment.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        opensesame_mainwindow.setWindowIcon(icon)
        self.centralwidget = QtGui.QWidget(opensesame_mainwindow)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.MinimumExpanding, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setObjectName(_fromUtf8("centralwidget"))
        self.verticalLayout_6 = QtGui.QVBoxLayout(self.centralwidget)
        self.verticalLayout_6.setObjectName(_fromUtf8("verticalLayout_6"))
        self.tabwidget = tab_widget(self.centralwidget)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.MinimumExpanding, QtGui.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabwidget.sizePolicy().hasHeightForWidth())
        self.tabwidget.setSizePolicy(sizePolicy)
        self.tabwidget.setTabsClosable(True)
        self.tabwidget.setMovable(True)
        self.tabwidget.setObjectName(_fromUtf8("tabwidget"))
        self.verticalLayout_6.addWidget(self.tabwidget)
        opensesame_mainwindow.setCentralWidget(self.centralwidget)
        self.menubar = QtGui.QMenuBar(opensesame_mainwindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1000, 22))
        self.menubar.setObjectName(_fromUtf8("menubar"))
        self.menu_file = QtGui.QMenu(self.menubar)
        self.menu_file.setObjectName(_fromUtf8("menu_file"))
        self.menu_recent_files = QtGui.QMenu(self.menu_file)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/recent_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_recent_files.setIcon(icon1)
        self.menu_recent_files.setObjectName(_fromUtf8("menu_recent_files"))
        self.menu_run = QtGui.QMenu(self.menubar)
        self.menu_run.setObjectName(_fromUtf8("menu_run"))
        self.menu_items = QtGui.QMenu(self.menubar)
        self.menu_items.setObjectName(_fromUtf8("menu_items"))
        self.menu_view = QtGui.QMenu(self.menubar)
        self.menu_view.setObjectName(_fromUtf8("menu_view"))
        self.menu_help = QtGui.QMenu(self.menubar)
        self.menu_help.setObjectName(_fromUtf8("menu_help"))
        self.menu_tools = QtGui.QMenu(self.menubar)
        self.menu_tools.setObjectName(_fromUtf8("menu_tools"))
        opensesame_mainwindow.setMenuBar(self.menubar)
        self.statusbar = statusbar(opensesame_mainwindow)
        self.statusbar.setObjectName(_fromUtf8("statusbar"))
        opensesame_mainwindow.setStatusBar(self.statusbar)
        self.dock_overview = QtGui.QDockWidget(opensesame_mainwindow)
        self.dock_overview.setMinimumSize(QtCore.QSize(200, 118))
        self.dock_overview.setFeatures(QtGui.QDockWidget.AllDockWidgetFeatures)
        self.dock_overview.setObjectName(_fromUtf8("dock_overview"))
        self.dock_widget_overview = QtGui.QWidget()
        self.dock_widget_overview.setObjectName(_fromUtf8("dock_widget_overview"))
        self.verticalLayout = QtGui.QVBoxLayout(self.dock_widget_overview)
        self.verticalLayout.setObjectName(_fromUtf8("verticalLayout"))
        self.itemtree = tree_overview(self.dock_widget_overview)
        self.itemtree.setAcceptDrops(True)
        self.itemtree.setAlternatingRowColors(True)
        self.itemtree.setAutoExpandDelay(4)
        self.itemtree.setAnimated(True)
        self.itemtree.setHeaderHidden(True)
        self.itemtree.setObjectName(_fromUtf8("itemtree"))
        self.verticalLayout.addWidget(self.itemtree)
        self.dock_overview.setWidget(self.dock_widget_overview)
        opensesame_mainwindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.dock_overview)
        self.dock_variable_inspector = QtGui.QDockWidget(opensesame_mainwindow)
        self.dock_variable_inspector.setAllowedAreas(QtCore.Qt.AllDockWidgetAreas)
        self.dock_variable_inspector.setObjectName(_fromUtf8("dock_variable_inspector"))
        self.dock_widget_variable_inspector = QtGui.QWidget()
        self.dock_widget_variable_inspector.setObjectName(_fromUtf8("dock_widget_variable_inspector"))
        self.verticalLayout_2 = QtGui.QVBoxLayout(self.dock_widget_variable_inspector)
        self.verticalLayout_2.setObjectName(_fromUtf8("verticalLayout_2"))
        self.widget_variable_inspector_header_box = QtGui.QWidget(self.dock_widget_variable_inspector)
        self.widget_variable_inspector_header_box.setObjectName(_fromUtf8("widget_variable_inspector_header_box"))
        self.horizontalLayout_3 = QtGui.QHBoxLayout(self.widget_variable_inspector_header_box)
        self.horizontalLayout_3.setSpacing(0)
        self.horizontalLayout_3.setMargin(4)
        self.horizontalLayout_3.setObjectName(_fromUtf8("horizontalLayout_3"))
        self.label_variables = QtGui.QLabel(self.widget_variable_inspector_header_box)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_variables.sizePolicy().hasHeightForWidth())
        self.label_variables.setSizePolicy(sizePolicy)
        self.label_variables.setText(_fromUtf8(""))
        self.label_variables.setPixmap(QtGui.QPixmap(_fromUtf8(":/icons/variable_inspector_large.png")))
        self.label_variables.setObjectName(_fromUtf8("label_variables"))
        self.horizontalLayout_3.addWidget(self.label_variables)
        self.label_3 = QtGui.QLabel(self.widget_variable_inspector_header_box)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName(_fromUtf8("label_3"))
        self.horizontalLayout_3.addWidget(self.label_3)
        self.verticalLayout_2.addWidget(self.widget_variable_inspector_header_box)
        self.widget = QtGui.QWidget(self.dock_widget_variable_inspector)
        self.widget.setObjectName(_fromUtf8("widget"))
        self.horizontalLayout_2 = QtGui.QHBoxLayout(self.widget)
        self.horizontalLayout_2.setSpacing(2)
        self.horizontalLayout_2.setMargin(0)
        self.horizontalLayout_2.setObjectName(_fromUtf8("horizontalLayout_2"))
        self.label_variables_search = QtGui.QLabel(self.widget)
        self.label_variables_search.setText(_fromUtf8(""))
        self.label_variables_search.setObjectName(_fromUtf8("label_variables_search"))
        self.horizontalLayout_2.addWidget(self.label_variables_search)
        self.edit_variable_filter = QtGui.QLineEdit(self.widget)
        self.edit_variable_filter.setObjectName(_fromUtf8("edit_variable_filter"))
        self.horizontalLayout_2.addWidget(self.edit_variable_filter)
        self.button_variables_clear = QtGui.QPushButton(self.widget)
        self.button_variables_clear.setText(_fromUtf8(""))
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/clear.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.button_variables_clear.setIcon(icon2)
        self.button_variables_clear.setIconSize(QtCore.QSize(16, 16))
        self.button_variables_clear.setObjectName(_fromUtf8("button_variables_clear"))
        self.horizontalLayout_2.addWidget(self.button_variables_clear)
        self.button_help_variables = QtGui.QPushButton(self.widget)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_help_variables.sizePolicy().hasHeightForWidth())
        self.button_help_variables.setSizePolicy(sizePolicy)
        self.button_help_variables.setText(_fromUtf8(""))
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/help.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.button_help_variables.setIcon(icon3)
        self.button_help_variables.setIconSize(QtCore.QSize(16, 16))
        self.button_help_variables.setFlat(False)
        self.button_help_variables.setObjectName(_fromUtf8("button_help_variables"))
        self.horizontalLayout_2.addWidget(self.button_help_variables)
        self.verticalLayout_2.addWidget(self.widget)
        self.table_variables = variable_inspector(self.dock_widget_variable_inspector)
        self.table_variables.setEditTriggers(QtGui.QAbstractItemView.NoEditTriggers)
        self.table_variables.setAlternatingRowColors(True)
        self.table_variables.setShowGrid(True)
        self.table_variables.setGridStyle(QtCore.Qt.DotLine)
        self.table_variables.setObjectName(_fromUtf8("table_variables"))
        self.table_variables.setColumnCount(3)
        self.table_variables.setRowCount(0)
        item = QtGui.QTableWidgetItem()
        self.table_variables.setHorizontalHeaderItem(0, item)
        item = QtGui.QTableWidgetItem()
        self.table_variables.setHorizontalHeaderItem(1, item)
        item = QtGui.QTableWidgetItem()
        self.table_variables.setHorizontalHeaderItem(2, item)
        self.table_variables.horizontalHeader().setSortIndicatorShown(True)
        self.table_variables.horizontalHeader().setStretchLastSection(True)
        self.table_variables.verticalHeader().setVisible(False)
        self.table_variables.verticalHeader().setCascadingSectionResizes(True)
        self.verticalLayout_2.addWidget(self.table_variables)
        self.dock_variable_inspector.setWidget(self.dock_widget_variable_inspector)
        opensesame_mainwindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.dock_variable_inspector)
        self.dock_pool = QtGui.QDockWidget(opensesame_mainwindow)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dock_pool.sizePolicy().hasHeightForWidth())
        self.dock_pool.setSizePolicy(sizePolicy)
        self.dock_pool.setObjectName(_fromUtf8("dock_pool"))
        self.dock_pool_widget = QtGui.QWidget()
        self.dock_pool_widget.setObjectName(_fromUtf8("dock_pool_widget"))
        self.verticalLayout_3 = QtGui.QVBoxLayout(self.dock_pool_widget)
        self.verticalLayout_3.setObjectName(_fromUtf8("verticalLayout_3"))
        self.dock_pool.setWidget(self.dock_pool_widget)
        opensesame_mainwindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.dock_pool)
        self.dock_stdout = QtGui.QDockWidget(opensesame_mainwindow)
        self.dock_stdout.setFeatures(QtGui.QDockWidget.AllDockWidgetFeatures)
        self.dock_stdout.setObjectName(_fromUtf8("dock_stdout"))
        self.dockWidgetContents_3 = QtGui.QWidget()
        self.dockWidgetContents_3.setObjectName(_fromUtf8("dockWidgetContents_3"))
        self.verticalLayout_4 = QtGui.QVBoxLayout(self.dockWidgetContents_3)
        self.verticalLayout_4.setObjectName(_fromUtf8("verticalLayout_4"))
        self.widget_debug_window_header_box = QtGui.QWidget(self.dockWidgetContents_3)
        self.widget_debug_window_header_box.setObjectName(_fromUtf8("widget_debug_window_header_box"))
        self.horizontalLayout_5 = QtGui.QHBoxLayout(self.widget_debug_window_header_box)
        self.horizontalLayout_5.setSpacing(0)
        self.horizontalLayout_5.setMargin(4)
        self.horizontalLayout_5.setObjectName(_fromUtf8("horizontalLayout_5"))
        self.label_stdout = QtGui.QLabel(self.widget_debug_window_header_box)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_stdout.sizePolicy().hasHeightForWidth())
        self.label_stdout.setSizePolicy(sizePolicy)
        self.label_stdout.setText(_fromUtf8(""))
        self.label_stdout.setPixmap(QtGui.QPixmap(_fromUtf8(":/icons/stdout_large.png")))
        self.label_stdout.setObjectName(_fromUtf8("label_stdout"))
        self.horizontalLayout_5.addWidget(self.label_stdout)
        self.label_4 = QtGui.QLabel(self.widget_debug_window_header_box)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setObjectName(_fromUtf8("label_4"))
        self.horizontalLayout_5.addWidget(self.label_4)
        self.verticalLayout_4.addWidget(self.widget_debug_window_header_box)
        self.widget_5 = QtGui.QWidget(self.dockWidgetContents_3)
        self.widget_5.setObjectName(_fromUtf8("widget_5"))
        self.horizontalLayout_6 = QtGui.QHBoxLayout(self.widget_5)
        self.horizontalLayout_6.setMargin(0)
        self.horizontalLayout_6.setObjectName(_fromUtf8("horizontalLayout_6"))
        self.edit_stdout = console(self.widget_5)
        self.edit_stdout.setReadOnly(False)
        self.edit_stdout.setObjectName(_fromUtf8("edit_stdout"))
        self.horizontalLayout_6.addWidget(self.edit_stdout)
        self.widget_3 = QtGui.QWidget(self.widget_5)
        self.widget_3.setObjectName(_fromUtf8("widget_3"))
        self.verticalLayout_5 = QtGui.QVBoxLayout(self.widget_3)
        self.verticalLayout_5.setSpacing(2)
        self.verticalLayout_5.setMargin(0)
        self.verticalLayout_5.setObjectName(_fromUtf8("verticalLayout_5"))
        self.button_help_stdout = QtGui.QPushButton(self.widget_3)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_help_stdout.sizePolicy().hasHeightForWidth())
        self.button_help_stdout.setSizePolicy(sizePolicy)
        self.button_help_stdout.setText(_fromUtf8(""))
        self.button_help_stdout.setIcon(icon3)
        self.button_help_stdout.setIconSize(QtCore.QSize(16, 16))
        self.button_help_stdout.setFlat(False)
        self.button_help_stdout.setObjectName(_fromUtf8("button_help_stdout"))
        self.verticalLayout_5.addWidget(self.button_help_stdout)
        self.button_clear_stdout = QtGui.QPushButton(self.widget_3)
        self.button_clear_stdout.setText(_fromUtf8(""))
        self.button_clear_stdout.setIcon(icon2)
        self.button_clear_stdout.setIconSize(QtCore.QSize(16, 16))
        self.button_clear_stdout.setObjectName(_fromUtf8("button_clear_stdout"))
        self.verticalLayout_5.addWidget(self.button_clear_stdout)
        spacerItem = QtGui.QSpacerItem(20, 40, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        self.verticalLayout_5.addItem(spacerItem)
        self.horizontalLayout_6.addWidget(self.widget_3)
        self.verticalLayout_4.addWidget(self.widget_5)
        self.dock_stdout.setWidget(self.dockWidgetContents_3)
        opensesame_mainwindow.addDockWidget(QtCore.Qt.DockWidgetArea(8), self.dock_stdout)
        self.toolbar_main = QtGui.QToolBar(opensesame_mainwindow)
        self.toolbar_main.setIconSize(QtCore.QSize(32, 32))
        self.toolbar_main.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        self.toolbar_main.setFloatable(True)
        self.toolbar_main.setObjectName(_fromUtf8("toolbar_main"))
        opensesame_mainwindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolbar_main)
        self.toolbar_items = toolbar_items(opensesame_mainwindow)
        self.toolbar_items.setObjectName(_fromUtf8("toolbar_items"))
        opensesame_mainwindow.addToolBar(QtCore.Qt.LeftToolBarArea, self.toolbar_items)
        self.action_open = QtGui.QAction(opensesame_mainwindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/open_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_open.setIcon(icon4)
        self.action_open.setObjectName(_fromUtf8("action_open"))
        self.action_save = QtGui.QAction(opensesame_mainwindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/save_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_save.setIcon(icon5)
        self.action_save.setObjectName(_fromUtf8("action_save"))
        self.action_save_as = QtGui.QAction(opensesame_mainwindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/saveas_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_save_as.setIcon(icon6)
        self.action_save_as.setObjectName(_fromUtf8("action_save_as"))
        self.action_quit = QtGui.QAction(opensesame_mainwindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/quit_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_quit.setIcon(icon7)
        self.action_quit.setObjectName(_fromUtf8("action_quit"))
        self.action_run = QtGui.QAction(opensesame_mainwindow)
        self.action_run.setObjectName(_fromUtf8("action_run"))
        self.action_new = QtGui.QAction(opensesame_mainwindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/new_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_new.setIcon(icon8)
        self.action_new.setObjectName(_fromUtf8("action_new"))
        self.action_add_sequence = QtGui.QAction(opensesame_mainwindow)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/sequence_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_add_sequence.setIcon(icon9)
        self.action_add_sequence.setObjectName(_fromUtf8("action_add_sequence"))
        self.action_add_sketchpad = QtGui.QAction(opensesame_mainwindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/sketchpad_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_add_sketchpad.setIcon(icon10)
        self.action_add_sketchpad.setObjectName(_fromUtf8("action_add_sketchpad"))
        self.action_add_keyboard_response = QtGui.QAction(opensesame_mainwindow)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/keyboard_response_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_add_keyboard_response.setIcon(icon11)
        self.action_add_keyboard_response.setObjectName(_fromUtf8("action_add_keyboard_response"))
        self.action_add_logger = QtGui.QAction(opensesame_mainwindow)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/logger_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_add_logger.setIcon(icon12)
        self.action_add_logger.setObjectName(_fromUtf8("action_add_logger"))
        self.action_add_loop = QtGui.QAction(opensesame_mainwindow)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/loop_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_add_loop.setIcon(icon13)
        self.action_add_loop.setObjectName(_fromUtf8("action_add_loop"))
        self.action_add_feedback = QtGui.QAction(opensesame_mainwindow)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/feedback_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_add_feedback.setIcon(icon14)
        self.action_add_feedback.setObjectName(_fromUtf8("action_add_feedback"))
        self.action_add_inline_script = QtGui.QAction(opensesame_mainwindow)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/inline_script_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_add_inline_script.setIcon(icon15)
        self.action_add_inline_script.setObjectName(_fromUtf8("action_add_inline_script"))
        self.action_close_all_tabs = QtGui.QAction(opensesame_mainwindow)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/closeothertabs_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_close_all_tabs.setIcon(icon16)
        self.action_close_all_tabs.setObjectName(_fromUtf8("action_close_all_tabs"))
        self.action_close_other_tabs = QtGui.QAction(opensesame_mainwindow)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/close_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_close_other_tabs.setIcon(icon17)
        self.action_close_other_tabs.setObjectName(_fromUtf8("action_close_other_tabs"))
        self.action_help = QtGui.QAction(opensesame_mainwindow)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/help_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_help.setIcon(icon18)
        self.action_help.setObjectName(_fromUtf8("action_help"))
        self.action_about = QtGui.QAction(opensesame_mainwindow)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/about_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_about.setIcon(icon19)
        self.action_about.setObjectName(_fromUtf8("action_about"))
        self.action_add_mouse_response = QtGui.QAction(opensesame_mainwindow)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/mouse_response_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_add_mouse_response.setIcon(icon20)
        self.action_add_mouse_response.setObjectName(_fromUtf8("action_add_mouse_response"))
        self.action_run_in_window = QtGui.QAction(opensesame_mainwindow)
        self.action_run_in_window.setObjectName(_fromUtf8("action_run_in_window"))
        self.action_check_for_update = QtGui.QAction(opensesame_mainwindow)
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/update_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_check_for_update.setIcon(icon21)
        self.action_check_for_update.setObjectName(_fromUtf8("action_check_for_update"))
        self.action_show_variable_inspector = QtGui.QAction(opensesame_mainwindow)
        self.action_show_variable_inspector.setCheckable(True)
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/variable_inspector_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_show_variable_inspector.setIcon(icon22)
        self.action_show_variable_inspector.setObjectName(_fromUtf8("action_show_variable_inspector"))
        self.action_add_sampler = QtGui.QAction(opensesame_mainwindow)
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/sampler_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_add_sampler.setIcon(icon23)
        self.action_add_sampler.setObjectName(_fromUtf8("action_add_sampler"))
        self.action_add_synth = QtGui.QAction(opensesame_mainwindow)
        icon24 = QtGui.QIcon()
        icon24.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/synth_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_add_synth.setIcon(icon24)
        self.action_add_synth.setObjectName(_fromUtf8("action_add_synth"))
        self.action_show_pool = QtGui.QAction(opensesame_mainwindow)
        self.action_show_pool.setCheckable(True)
        icon25 = QtGui.QIcon()
        icon25.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/pool_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_show_pool.setIcon(icon25)
        self.action_show_pool.setObjectName(_fromUtf8("action_show_pool"))
        self.action_show_stdout = QtGui.QAction(opensesame_mainwindow)
        self.action_show_stdout.setCheckable(True)
        icon26 = QtGui.QIcon()
        icon26.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/stdout_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_show_stdout.setIcon(icon26)
        self.action_show_stdout.setObjectName(_fromUtf8("action_show_stdout"))
        self.action_enable_auto_response = QtGui.QAction(opensesame_mainwindow)
        self.action_enable_auto_response.setCheckable(True)
        self.action_enable_auto_response.setObjectName(_fromUtf8("action_enable_auto_response"))
        self.actionPlugins = QtGui.QAction(opensesame_mainwindow)
        self.actionPlugins.setEnabled(False)
        self.actionPlugins.setObjectName(_fromUtf8("actionPlugins"))
        self.action_show_random_tip = QtGui.QAction(opensesame_mainwindow)
        self.action_show_random_tip.setIcon(icon19)
        self.action_show_random_tip.setObjectName(_fromUtf8("action_show_random_tip"))
        self.action_open_autosave_folder = QtGui.QAction(opensesame_mainwindow)
        self.action_open_autosave_folder.setIcon(icon25)
        self.action_open_autosave_folder.setObjectName(_fromUtf8("action_open_autosave_folder"))
        self.action_submit_a_bug = QtGui.QAction(opensesame_mainwindow)
        icon27 = QtGui.QIcon()
        icon27.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/submit_bug.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_submit_a_bug.setIcon(icon27)
        self.action_submit_a_bug.setObjectName(_fromUtf8("action_submit_a_bug"))
        self.action_contribute = QtGui.QAction(opensesame_mainwindow)
        icon28 = QtGui.QIcon()
        icon28.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/contribute.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_contribute.setIcon(icon28)
        self.action_contribute.setObjectName(_fromUtf8("action_contribute"))
        self.action_preferences = QtGui.QAction(opensesame_mainwindow)
        icon29 = QtGui.QIcon()
        icon29.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/options_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_preferences.setIcon(icon29)
        self.action_preferences.setObjectName(_fromUtf8("action_preferences"))
        self.actionDummy = QtGui.QAction(opensesame_mainwindow)
        self.actionDummy.setObjectName(_fromUtf8("actionDummy"))
        self.action_show_overview = QtGui.QAction(opensesame_mainwindow)
        self.action_show_overview.setCheckable(True)
        self.action_show_overview.setObjectName(_fromUtf8("action_show_overview"))
        self.action_onetabmode = QtGui.QAction(opensesame_mainwindow)
        self.action_onetabmode.setCheckable(True)
        icon30 = QtGui.QIcon()
        icon30.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/onetabmode_large.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_onetabmode.setIcon(icon30)
        self.action_onetabmode.setObjectName(_fromUtf8("action_onetabmode"))
        self.action_compact_toolbar = QtGui.QAction(opensesame_mainwindow)
        self.action_compact_toolbar.setCheckable(True)
        self.action_compact_toolbar.setObjectName(_fromUtf8("action_compact_toolbar"))
        self.action_online_documentation = QtGui.QAction(opensesame_mainwindow)
        self.action_online_documentation.setObjectName(_fromUtf8("action_online_documentation"))
        self.action_online_forum = QtGui.QAction(opensesame_mainwindow)
        self.action_online_forum.setObjectName(_fromUtf8("action_online_forum"))
        self.action_run_quick = QtGui.QAction(opensesame_mainwindow)
        self.action_run_quick.setObjectName(_fromUtf8("action_run_quick"))
        self.menu_recent_files.addAction(self.actionDummy)
        self.menu_file.addAction(self.action_new)
        self.menu_file.addAction(self.action_open)
        self.menu_file.addAction(self.action_save)
        self.menu_file.addAction(self.action_save_as)
        self.menu_file.addSeparator()
        self.menu_file.addAction(self.menu_recent_files.menuAction())
        self.menu_file.addSeparator()
        self.menu_file.addAction(self.action_quit)
        self.menu_run.addAction(self.action_run)
        self.menu_run.addAction(self.action_run_in_window)
        self.menu_run.addAction(self.action_run_quick)
        self.menu_run.addSeparator()
        self.menu_run.addAction(self.action_enable_auto_response)
        self.menu_items.addAction(self.action_add_loop)
        self.menu_items.addAction(self.action_add_sequence)
        self.menu_items.addAction(self.action_add_sketchpad)
        self.menu_items.addAction(self.action_add_feedback)
        self.menu_items.addAction(self.action_add_sampler)
        self.menu_items.addAction(self.action_add_synth)
        self.menu_items.addAction(self.action_add_keyboard_response)
        self.menu_items.addAction(self.action_add_mouse_response)
        self.menu_items.addAction(self.action_add_logger)
        self.menu_items.addAction(self.action_add_inline_script)
        self.menu_items.addSeparator()
        self.menu_items.addAction(self.actionPlugins)
        self.menu_view.addAction(self.action_close_all_tabs)
        self.menu_view.addAction(self.action_close_other_tabs)
        self.menu_view.addAction(self.action_onetabmode)
        self.menu_view.addSeparator()
        self.menu_view.addAction(self.action_show_overview)
        self.menu_view.addAction(self.action_show_variable_inspector)
        self.menu_view.addAction(self.action_show_pool)
        self.menu_view.addAction(self.action_show_stdout)
        self.menu_help.addAction(self.action_online_documentation)
        self.menu_help.addAction(self.action_help)
        self.menu_help.addSeparator()
        self.menu_help.addAction(self.action_about)
        self.menu_tools.addAction(self.action_check_for_update)
        self.menu_tools.addAction(self.action_open_autosave_folder)
        self.menu_tools.addSeparator()
        self.menu_tools.addAction(self.action_preferences)
        self.menubar.addAction(self.menu_file.menuAction())
        self.menubar.addAction(self.menu_run.menuAction())
        self.menubar.addAction(self.menu_items.menuAction())
        self.menubar.addAction(self.menu_view.menuAction())
        self.menubar.addAction(self.menu_tools.menuAction())
        self.menubar.addAction(self.menu_help.menuAction())
        self.toolbar_main.addAction(self.action_new)
        self.toolbar_main.addAction(self.action_open)
        self.toolbar_main.addAction(self.action_save)
        self.toolbar_main.addSeparator()
        self.toolbar_main.addAction(self.action_run)
        self.toolbar_main.addAction(self.action_run_in_window)
        self.toolbar_main.addAction(self.action_run_quick)
        self.toolbar_main.addSeparator()
        self.toolbar_main.addAction(self.action_close_other_tabs)
        self.toolbar_main.addAction(self.action_onetabmode)
        self.toolbar_main.addSeparator()
        self.toolbar_main.addAction(self.action_show_pool)
        self.toolbar_main.addAction(self.action_show_variable_inspector)
        self.toolbar_main.addAction(self.action_show_stdout)
        self.toolbar_main.addSeparator()
        self.toolbar_main.addAction(self.action_help)
        self.toolbar_main.addAction(self.action_online_documentation)

        self.retranslateUi(opensesame_mainwindow)
        self.tabwidget.setCurrentIndex(-1)
        QtCore.QObject.connect(self.button_variables_clear, QtCore.SIGNAL(_fromUtf8("clicked()")), self.edit_variable_filter.clear)
        QtCore.QObject.connect(self.button_clear_stdout, QtCore.SIGNAL(_fromUtf8("clicked()")), self.edit_stdout.clear)
        QtCore.QMetaObject.connectSlotsByName(opensesame_mainwindow)

    def retranslateUi(self, opensesame_mainwindow):
        opensesame_mainwindow.setWindowTitle(_translate("opensesame_mainwindow", "OpenSesame", None))
        self.menu_file.setTitle(_translate("opensesame_mainwindow", "File", None))
        self.menu_recent_files.setTitle(_translate("opensesame_mainwindow", "Recent files", None))
        self.menu_run.setTitle(_translate("opensesame_mainwindow", "Run", None))
        self.menu_items.setTitle(_translate("opensesame_mainwindow", "Items", None))
        self.menu_view.setTitle(_translate("opensesame_mainwindow", "View", None))
        self.menu_help.setTitle(_translate("opensesame_mainwindow", "Help", None))
        self.menu_tools.setTitle(_translate("opensesame_mainwindow", "Tools", None))
        self.dock_overview.setWindowTitle(_translate("opensesame_mainwindow", "Overview", None))
        self.itemtree.headerItem().setText(0, _translate("opensesame_mainwindow", "Name", None))
        self.dock_variable_inspector.setWindowTitle(_translate("opensesame_mainwindow", "Variable inspector", None))
        self.label_3.setText(_translate("opensesame_mainwindow", "Variable inspector", None))
        self.edit_variable_filter.setToolTip(_translate("opensesame_mainwindow", "Enter a filter", None))
        self.button_variables_clear.setToolTip(_translate("opensesame_mainwindow", "Clear filter", None))
        self.button_help_variables.setToolTip(_translate("opensesame_mainwindow", "Help", None))
        self.table_variables.setSortingEnabled(True)
        item = self.table_variables.horizontalHeaderItem(0)
        item.setText(_translate("opensesame_mainwindow", "Variable", None))
        item = self.table_variables.horizontalHeaderItem(1)
        item.setText(_translate("opensesame_mainwindow", "Value", None))
        item = self.table_variables.horizontalHeaderItem(2)
        item.setText(_translate("opensesame_mainwindow", "In item", None))
        self.dock_pool.setWindowTitle(_translate("opensesame_mainwindow", "File pool", None))
        self.dock_stdout.setWindowTitle(_translate("opensesame_mainwindow", "Debug window", None))
        self.label_4.setText(_translate("opensesame_mainwindow", "Debug window", None))
        self.button_help_stdout.setToolTip(_translate("opensesame_mainwindow", "Help", None))
        self.button_clear_stdout.setToolTip(_translate("opensesame_mainwindow", "Clear debug window", None))
        self.toolbar_main.setWindowTitle(_translate("opensesame_mainwindow", "Main toolbar", None))
        self.toolbar_items.setWindowTitle(_translate("opensesame_mainwindow", "Toolbar items", None))
        self.action_open.setText(_translate("opensesame_mainwindow", "Open", None))
        self.action_open.setToolTip(_translate("opensesame_mainwindow", "Open (Ctrl+0)", None))
        self.action_open.setShortcut(_translate("opensesame_mainwindow", "Ctrl+O", None))
        self.action_save.setText(_translate("opensesame_mainwindow", "Save", None))
        self.action_save.setToolTip(_translate("opensesame_mainwindow", "Save (Control+S)", None))
        self.action_save.setShortcut(_translate("opensesame_mainwindow", "Ctrl+S", None))
        self.action_save_as.setText(_translate("opensesame_mainwindow", "Save as", None))
        self.action_save_as.setToolTip(_translate("opensesame_mainwindow", "Save as (Control+Shift+S)", None))
        self.action_save_as.setShortcut(_translate("opensesame_mainwindow", "Ctrl+Shift+S", None))
        self.action_quit.setText(_translate("opensesame_mainwindow", "Quit", None))
        self.action_quit.setToolTip(_translate("opensesame_mainwindow", "Quit (Alt+F4)", None))
        self.action_run.setText(_translate("opensesame_mainwindow", "Run fullscreen", None))
        self.action_run.setToolTip(_translate("opensesame_mainwindow", "Run fullscreen (Control+R)", None))
        self.action_run.setShortcut(_translate("opensesame_mainwindow", "Ctrl+R", None))
        self.action_new.setText(_translate("opensesame_mainwindow", "New", None))
        self.action_new.setToolTip(_translate("opensesame_mainwindow", "New (Control+N)", None))
        self.action_new.setShortcut(_translate("opensesame_mainwindow", "Ctrl+N", None))
        self.action_add_sequence.setText(_translate("opensesame_mainwindow", "Add sequence", None))
        self.action_add_sketchpad.setText(_translate("opensesame_mainwindow", "Add sketchpad", None))
        self.action_add_keyboard_response.setText(_translate("opensesame_mainwindow", "Add keyboard response", None))
        self.action_add_logger.setText(_translate("opensesame_mainwindow", "Add logger", None))
        self.action_add_loop.setText(_translate("opensesame_mainwindow", "Add loop", None))
        self.action_add_feedback.setText(_translate("opensesame_mainwindow", "Add feedback", None))
        self.action_add_inline_script.setText(_translate("opensesame_mainwindow", "Add inline script", None))
        self.action_close_all_tabs.setText(_translate("opensesame_mainwindow", "Close all tabs", None))
        self.action_close_other_tabs.setText(_translate("opensesame_mainwindow", "Close other tabs", None))
        self.action_close_other_tabs.setToolTip(_translate("opensesame_mainwindow", "Close other tabs (Control+T)", None))
        self.action_close_other_tabs.setShortcut(_translate("opensesame_mainwindow", "Ctrl+T", None))
        self.action_help.setText(_translate("opensesame_mainwindow", "Offline help", None))
        self.action_about.setText(_translate("opensesame_mainwindow", "About", None))
        self.action_add_mouse_response.setText(_translate("opensesame_mainwindow", "Add mouse response", None))
        self.action_run_in_window.setText(_translate("opensesame_mainwindow", "Run in window", None))
        self.action_run_in_window.setToolTip(_translate("opensesame_mainwindow", "Run in window (Control+W)", None))
        self.action_run_in_window.setShortcut(_translate("opensesame_mainwindow", "Ctrl+W", None))
        self.action_check_for_update.setText(_translate("opensesame_mainwindow", "Check for updates", None))
        self.action_show_variable_inspector.setText(_translate("opensesame_mainwindow", "Show variable inspector", None))
        self.action_show_variable_inspector.setToolTip(_translate("opensesame_mainwindow", "Show variable inspector (Control+I)", None))
        self.action_show_variable_inspector.setShortcut(_translate("opensesame_mainwindow", "Ctrl+I", None))
        self.action_add_sampler.setText(_translate("opensesame_mainwindow", "Add sampler", None))
        self.action_add_sampler.setToolTip(_translate("opensesame_mainwindow", "Add sound sampler", None))
        self.action_add_synth.setText(_translate("opensesame_mainwindow", "Add synth", None))
        self.action_add_synth.setToolTip(_translate("opensesame_mainwindow", "Add sound synthesizer", None))
        self.action_show_pool.setText(_translate("opensesame_mainwindow", "Show file pool", None))
        self.action_show_pool.setShortcut(_translate("opensesame_mainwindow", "Ctrl+P", None))
        self.action_show_stdout.setText(_translate("opensesame_mainwindow", "Show debug window", None))
        self.action_show_stdout.setToolTip(_translate("opensesame_mainwindow", "Show debug window (standard output) and a Python interpreter (Control+D)", None))
        self.action_show_stdout.setShortcut(_translate("opensesame_mainwindow", "Ctrl+D", None))
        self.action_enable_auto_response.setText(_translate("opensesame_mainwindow", "Enable auto response", None))
        self.actionPlugins.setText(_translate("opensesame_mainwindow", "Plugins", None))
        self.action_show_random_tip.setText(_translate("opensesame_mainwindow", "Random tip", None))
        self.action_show_random_tip.setToolTip(_translate("opensesame_mainwindow", "Show a random tip", None))
        self.action_open_autosave_folder.setText(_translate("opensesame_mainwindow", "Open backup folder", None))
        self.action_submit_a_bug.setText(_translate("opensesame_mainwindow", "Submit a bug", None))
        self.action_contribute.setText(_translate("opensesame_mainwindow", "Contribute", None))
        self.action_preferences.setText(_translate("opensesame_mainwindow", "Preferences", None))
        self.actionDummy.setText(_translate("opensesame_mainwindow", "Dummy", None))
        self.action_show_overview.setText(_translate("opensesame_mainwindow", "Show overview area", None))
        self.action_show_overview.setShortcut(_translate("opensesame_mainwindow", "Ctrl+Shift+O", None))
        self.action_onetabmode.setText(_translate("opensesame_mainwindow", "One tab mode", None))
        self.action_onetabmode.setToolTip(_translate("opensesame_mainwindow", "Enable one tab mode", None))
        self.action_compact_toolbar.setText(_translate("opensesame_mainwindow", "Compact toolbar", None))
        self.action_online_documentation.setText(_translate("opensesame_mainwindow", "Online help", None))
        self.action_online_forum.setText(_translate("opensesame_mainwindow", "Online forum", None))
        self.action_run_quick.setText(_translate("opensesame_mainwindow", "Quick run", None))
        self.action_run_quick.setToolTip(_translate("opensesame_mainwindow", "Give your experiment a quick test run", None))
        self.action_run_quick.setShortcut(_translate("opensesame_mainwindow", "Ctrl+Shift+W", None))

from libqtopensesame.widgets.statusbar import statusbar
from libqtopensesame.widgets.tree_overview import tree_overview
from libqtopensesame.widgets.tab_widget import tab_widget
from libqtopensesame.widgets.variable_inspector import variable_inspector
from libqtopensesame.widgets.toolbar_items import toolbar_items
from libqtopensesame.widgets.pyterm import console
