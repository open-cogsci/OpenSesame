# Generated by OpenSesame 0.27.2~pre6 (Frisky Freud)
# Thu May  9 14:18:35 2013 (posix)
# <http://www.cogsci.nl/opensesame>

set foreground "white"
set subject_parity "even"
set font_size "18"
set description "A simple lexical-decision example experiment"
set title "Lexical decision"
set transparent_variables "no"
set start "experiment"
set font_bold "no"
set coordinates "relative"
set height "768"
set mouse_backend "xpyriment"
set width "1024"
set compensation "0"
set sampler_backend "legacy"
set keyboard_backend "legacy"
set background "black"
set subject_nr "0"
set canvas_backend "xpyriment"
set font_family "mono"
set synth_backend "legacy"
set font_italic "no"

define form_text_display form_instructions
	set rows "1;4;1"
	set description "A simple text display form"
	set cols "1;1;1"
	__form_text__
	In this experiment, your task is to indicate as quickly as possible whether a word is a verb or a noun.
	
	verb -> press [verb_key]
	noun -> press [noun_key]
	__end__
	set form_title "<span size=24>Instructions</span>"
	set ok_text "Begin!"
	widget 0 0 3 1 label text="[form_title]"
	widget 0 1 3 1 label center="no" text="[form_text]"
	widget 1 2 1 1 button text="[ok_text]"


define sketchpad word
	set duration "0"
	set description "Displays stimuli"
	set start_response_interval "no"
	draw textline 0 0 "[word]" center=1 color=white font_family="mono" font_size=18 font_italic=no font_bold=no show_if="always"

define feedback feedback
	set duration "keypress"
	set description "Provides feedback to the participant"
	draw textline 0 -96 "Your average response time was [avg_rt]ms" center=1 color=white font_family="mono" font_size=18 font_italic=no font_bold=no show_if="always"
	draw textline 0 32 "Press any key to continue" center=1 color=white font_family="mono" font_size=18 font_italic=no font_bold=no show_if="always"
	draw textline 0 -32 "Your accuracy was [acc]%" center=1 color=white font_family="mono" font_size=18 font_italic=no font_bold=no show_if="always"

define sketchpad red_fix
	set duration "500"
	set description "Displays stimuli"
	set start_response_interval "no"
	draw fixdot 0 0 color=red show_if="always"

define sketchpad fixation
	set duration "500"
	set description "Displays stimuli"
	set start_response_interval "no"
	draw fixdot 0 0 color=white show_if="always"

define sequence trial_sequence
	set description "A single trial"
	run fixation "always"
	run word "always"
	run keyboard_response "always"
	run red_fix "[correct] = 0"
	run green_fix "[correct] = 1"
	run logger "always"

define sequence experiment
	run about_this_example "always"
	run counterbalance "always"
	run form_instructions "always"
	run experimental_loop "always"
	run goodbye "always"

define loop block_loop
	set repeat "1"
	set description "A single block of trials"
	set item "trial_sequence"
	set column_order "word;word_type;word_valence;correct_response"
	set cycles "6"
	set order "random"
	setcycle 0 correct_response "[noun_key]"
	setcycle 0 word "thing"
	setcycle 0 word_valence "neutral"
	setcycle 0 word_type "noun"
	setcycle 1 correct_response "[noun_key]"
	setcycle 1 word "happiness"
	setcycle 1 word_valence "positive"
	setcycle 1 word_type "noun"
	setcycle 2 correct_response "[noun_key]"
	setcycle 2 word "sadness"
	setcycle 2 word_valence "negative"
	setcycle 2 word_type "noun"
	setcycle 3 correct_response "[verb_key]"
	setcycle 3 word "do"
	setcycle 3 word_valence "neutral"
	setcycle 3 word_type "verb"
	setcycle 4 correct_response "[verb_key]"
	setcycle 4 word "rejoice"
	setcycle 4 word_valence "positive"
	setcycle 4 word_type "verb"
	setcycle 5 correct_response "[verb_key]"
	setcycle 5 word "grieve"
	setcycle 5 word_valence "negative"
	setcycle 5 word_type "verb"
	run trial_sequence

define reset_feedback reset_feedback

define loop experimental_loop
	set repeat "1"
	set description "A loop containing one or more practice blocks"
	set item "block_sequence"
	set column_order ""
	set cycles "1"
	set order "random"
	run block_sequence

define text_display goodbye
	set foreground "white"
	set font_size "18"
	set description "Presents a display consisting of text"
	set maxchar "50"
	set align "center"
	__content__
	FINISHED
	
	The experiment is finished!
	__end__
	set background "black"
	set duration "keypress"
	set font_family "mono"

define keyboard_response keyboard_response
	set allowed_responses "z;slash"
	set description "Collects keyboard responses"
	set timeout "infinite"

define inline_script counterbalance
	set _run ""
	___prepare__
	if self.get("subject_parity") == "odd":
		self.experiment.set("verb_key", "z")
		self.experiment.set("noun_key", "slash")
	else:
		self.experiment.set("verb_key", "z")
		self.experiment.set("noun_key", "slash")
	__end__
	set description "Executes Python code"

define logger logger
	set description "Logs experimental data"

define notepad about_this_example
	__note__
	This example shows how to create a lexical decision task, 
	using a counterbalanced response mapping.
	__end__
	set description "A simple notepad to document your experiment. This plug-in does nothing."

define sketchpad green_fix
	set duration "500"
	set description "Displays stimuli"
	set start_response_interval "no"
	draw fixdot 0 0 color=green show_if="always"

define sequence block_sequence
	set description "A sequence containging a single block of trials followed by feedback to the participant"
	run reset_feedback "always"
	run block_loop "always"
	run feedback "always"

